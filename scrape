library(baseballr)
library(dplyr)
library(purrr)
dat<-ncaa_teams(year = "2024", division = 2)

data<-try(load_ncaa_baseball_teams())

dat <- dat %>%
       mutate(team_id = map_chr(team_name, function(name) {
             result <- ncaa_school_id_lu(team_name = name)
             
               # Assuming the result has a column or field 'team_id', you can extract it like this:
             if (length(result) > 0) {
                     return(as.character(result$team_id[1]))  # Extract the team_id from the first row
                 } else {
                       return(NA)  # Return NA if no result is found
                   }
         }))




# Corrected manual_ids vector
manual_ids <- c(
  "Dominican (NY)" = "8956",
  "Wilmington (DE)" = "1460",
  "Emmanuel (GA)" = "30193",
  "King (TN)" = "30051",
  "Salem (WV)" = "19117",
  "Lincoln (PA)" = "357",
  "Queens (NY)" = "560",
  "Wayne St. (MI)" = "757",
  "Maryville (MO)" = "395",
  "Union (TN)" = "30153",
  "St. Mary's (TX)" = "1346",
  "Charleston (WV)" = "1013",
  "Notre Dame (OH)" = "30126",
  "Augustana (SD)" = "41",
  "Wayne St. (NE)" = "1433",
  "California (PA)" = "106",
  "Indiana (PA)" = "307",
  "Anderson (SC)" = "13028",
  "Albany St. (GA)" = "13",
  "Embry-Riddle (FL)" = "9680",
  "Regis (CO)" = "568"
)

 
   # Now, update the missing team_id values in the dataframe
   dat <- dat %>%
         mutate(team_id = ifelse(is.na(team_id) & team_name %in% names(manual_ids), 
                                                               manual_ids[team_name], 
                                                               team_id))
   
   
   stats<-ncaa_scrape(8956, year = most_recent_ncaa_baseball_season(), type = "batting")
   colnames(stats) <- c("#", "Player", "Yr", "Pos", "Height", "Bat/Throw", "GP", "GS", "BA", 
                        "OBPct", "SlgPct", "R", "AB", "H", "X2B", "X3B", "TB", "HR", "RBI", 
                        "uBB", "HBP", "SF", "SH", "SO", "OPP_DP", "CS", "Picked_Off", "SB", 
                        "IBB", "GIDP", "RBI2out", "season", "team_id")
   stats$AB <- as.numeric(stats$AB)
  stats[is.na(stats)] <- 0
   
   
   stats$X1B<-stats$H-(stats$X2B + stats$X3B + stats$HR)
   stats$PA <- stats$AB + stats$uBB + stats$HBP + stats$SF + stats$SH
   stats$OPS <- stats$OBPct + stats$SlgPct
   
   stats<-woba_plus(stats)
   
   stats <- stats[!is.na(stats$wOBA), ]
   stats <- stats[!grepl("Totals", stats$Player), ]
